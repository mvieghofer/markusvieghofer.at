<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>Software made in Österreich</description>
    <link>http://markusvieghofer.at//</link>
    <atom:link href="http://markusvieghofer.at//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 29 Nov 2016 21:27:50 +0100</pubDate>
    <lastBuildDate>Tue, 29 Nov 2016 21:27:50 +0100</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Docker Bootcamp</title>
        <description>&lt;p&gt;I wanted check out Docker for quiet a while now. Eventually I found the time to do so and started to look for some learning materials online. Since Docker exists since three years now there are tons of materials out there. Therefore I’m not going to write an in depth tutorial about all the various commands but rather a quick overview of the technology.&lt;/p&gt;

&lt;h2 id=&quot;what-is-docker&quot;&gt;What is Docker?&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Docker is an open-source project that automates the deployment of Linux applications inside software containers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is how &lt;a href=&quot;https://en.wikipedia.org/wiki/Docker_(software)&quot; target=&quot;_blank&quot;&gt;wikipedia&lt;/a&gt; defines it. Docker itself describes it similarly with &lt;a href=&quot;https://www.docker.com/what-docker&quot; target=&quot;_blank&quot;&gt;the following words&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Docker containers wrap a piece of software in a complete filesystem that contains everything needed to run: code, runtime, system tools, system libraries – anything that can be installed on a server. This guarantees that the software will always run the same, regardless of its environment.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Summarized, Docker is a container technology that executes your software in a sandboxed environment.&lt;/p&gt;

&lt;p&gt;Each of these containers can be shared via a public or private repository (similar to maven artifacts). Docker runs its own public repository, the &lt;a href=&quot;https://hub.docker.com/&quot; target=&quot;_blank&quot;&gt;Docker Hub&lt;/a&gt;, where you can download prebuilt images and share your own images.&lt;/p&gt;

&lt;h2 id=&quot;what-is-docker-not&quot;&gt;What is Docker not?&lt;/h2&gt;
&lt;p&gt;Docker is no virtual machine technology. In contrast to virtual machines Docker containers don’t boot up their own operating system but depend on the kernel of their host OS. When a Docker image is pulled on another machine than it was built on it uses the host OS of that new machine.&lt;/p&gt;

&lt;h2 id=&quot;getting-started&quot;&gt;Getting started&lt;/h2&gt;
&lt;p&gt;First you have to install Docker on your laptop. For instructions on this please check out the &lt;a href=&quot;https://docs.docker.com/engine/installation/&quot; target=&quot;_blank&quot;&gt;official docs&lt;/a&gt; on that topic.&lt;/p&gt;

&lt;p&gt;To run your first container just type in &lt;code class=&quot;highlighter-rouge&quot;&gt;docker run ubuntu&lt;/code&gt;. This will pull down the Ubuntu image and run it on your laptop. Since we didn’t execute any command, the image is exited immediately. If you want to do something more spectacular you can run &lt;code class=&quot;highlighter-rouge&quot;&gt;docker run -it ubuntu sh&lt;/code&gt;. This will start and interactive shell in your ubuntu container you can play with. When you want to exit the container just type in the &lt;code class=&quot;highlighter-rouge&quot;&gt;exit&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;After you started your first container you can take a look at all the images Docker already pulled down. To do this run &lt;code class=&quot;highlighter-rouge&quot;&gt;docker images&lt;/code&gt; and you should get an output that looks something like this:
&lt;script src=&quot;https://gist.github.com/mvieghofer/21a0d7d3611ccfe62cce9cce691e914d.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Of course, you can also run a Docker container as a daemon. For example you could start an &lt;a href=&quot;https://www.elastic.co/products/elasticsearch&quot; target=&quot;_blank&quot;&gt;elasticsearch&lt;/a&gt; container that runs in the background like this: &lt;code class=&quot;highlighter-rouge&quot;&gt;docker run -d elasticsearch&lt;/code&gt;. The &lt;code class=&quot;highlighter-rouge&quot;&gt;-d&lt;/code&gt; option tells Docker to deamonize the container.&lt;/p&gt;

&lt;p&gt;Elasticsearch runs on the port 9200 by default, but since it is running inside a container you cannot reach it from outside. To do this we need to map the port that is used inside the container to a port that can be reached from outside the container. If you wanted to publish all internal ports to random ports you can also add the &lt;code class=&quot;highlighter-rouge&quot;&gt;-P&lt;/code&gt; option. If you want to publish only specific ports (e.g. its default http port) you can add the &lt;code class=&quot;highlighter-rouge&quot;&gt;-p 9200:9200&lt;/code&gt; parameter. The full command is then &lt;code class=&quot;highlighter-rouge&quot;&gt;docker run -d -p 9200:9200 elasticsearch&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now you can reach Elasticsearch from the browser at &lt;a href=&quot;http://localhost:9200&quot; target=&quot;_blank&quot;&gt;http://localhost:9200&lt;/a&gt; (it might take some time until Elasticsearch is booted up).&lt;/p&gt;

&lt;p&gt;In the meantime you can check Docker for its running processes using &lt;code class=&quot;highlighter-rouge&quot;&gt;docker ps&lt;/code&gt;.
This will display a list of running commands similar to this one:
&lt;script src=&quot;https://gist.github.com/mvieghofer/ae6a3802dcb44d7fedb6c444439ac84e.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;When you want to stop a Docker container again you do this by running &lt;code class=&quot;highlighter-rouge&quot;&gt;docker stop 865d8295fe70&lt;/code&gt;. As you might have noticed the parameter passed to the stop command is the container id displayed in the &lt;code class=&quot;highlighter-rouge&quot;&gt;docker ps&lt;/code&gt; listing above. If you want to stop all Docker containers at once you can do this using &lt;code class=&quot;highlighter-rouge&quot;&gt;docker stop $(docker ps -q)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The last command I quickly want to discuss here is the &lt;code class=&quot;highlighter-rouge&quot;&gt;docker build&lt;/code&gt; command. With &lt;code class=&quot;highlighter-rouge&quot;&gt;docker build&lt;/code&gt; you can create your own Docker images. In the &lt;code class=&quot;highlighter-rouge&quot;&gt;Dockerfile&lt;/code&gt; &amp;lt;ou define all the necessary steps to build your image. The following file shows a very minimalistic (and not so useful) example of such a &lt;code class=&quot;highlighter-rouge&quot;&gt;Dockerfile&lt;/code&gt;.
&lt;script src=&quot;https://gist.github.com/mvieghofer/8a3870252b4b553ed3a1494e8597f8e8.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;With &lt;code class=&quot;highlighter-rouge&quot;&gt;docker build -t &amp;lt;username&amp;gt;/&amp;lt;imagename&amp;gt; .&lt;/code&gt; (change &amp;lt;username&amp;gt; to your username and the &amp;lt;imagename&amp;gt; to the name of the image) you can build the Docker image.&lt;/p&gt;

&lt;h2 id=&quot;advanced-docker-tools&quot;&gt;Advanced Docker tools&lt;/h2&gt;
&lt;p&gt;When you switch to Docker for managing your application you will have to create a few Docker images, at least one for your application and one for your datastore. You can run each Docker image individually or you can use &lt;a href=&quot;https://docs.docker.com/compose/overview/&quot; target=&quot;_blank&quot;&gt;Docker Compose&lt;/a&gt;, which is a Docker tool for multi container applications.&lt;/p&gt;

&lt;p&gt;You can create a Compose file to configure how your application starts. Each container still has a &lt;code class=&quot;highlighter-rouge&quot;&gt;Dockerfile&lt;/code&gt; which configures the Docker image itself but additionally you create a &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; configuration file where you define how the individual Docker images are started. Lastly you can run &lt;code class=&quot;highlighter-rouge&quot;&gt;docker-compose up&lt;/code&gt; to tell Docker Compose to run your entire app.&lt;/p&gt;

&lt;p&gt;Another useful tool is &lt;a href=&quot;https://docs.docker.com/machine/overview/&quot; target=&quot;_blank&quot;&gt;Docker Machine&lt;/a&gt;. With Docker machine you can manage remote machines easily. The following video gives you a great overview of how it works and what you can do with it.&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/yUDEGWCp9qU&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;The last Docker tool I want to present here is &lt;a href=&quot;https://docs.docker.com/swarm/overview/&quot; target=&quot;_blank&quot;&gt;Docker Swarm&lt;/a&gt;. It is the native clustering tool for Docker and works tightly with Docker Machine. With the &lt;code class=&quot;highlighter-rouge&quot;&gt;swarm&lt;/code&gt; image you can launch Docker Swarm on the machines in your cluster. There you have a master node, called the Swarm manager, and client nodes, the so called swarm nodes.&lt;/p&gt;

&lt;p&gt;The Swarm manager manages the cluster and is responsible of starting the correct amount of Docker containers on the right nodes in your cluster. Similar to Docker Machine, Docker Swarm serves the Docker API which makes it incredibly easy to run highly distributed Docker applications on your cluster with just a few commands.&lt;/p&gt;

&lt;h2 id=&quot;next-steps&quot;&gt;Next steps&lt;/h2&gt;
&lt;p&gt;This was a very quick overview of my selection of the most important commands and features of Docker. To get a better overview of all the details you can check out the following resources:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The &lt;a href=&quot;https://docs.docker.com/&quot; target=&quot;_blank&quot;&gt;official docs&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;I found a very good and comprehensive &lt;a href=&quot;https://prakhar.me/docker-curriculum/&quot; target=&quot;_blank&quot;&gt;Docker tutorial&lt;/a&gt;. This was the first tutorial I did.&lt;/li&gt;
  &lt;li&gt;A curated &lt;a href=&quot;https://github.com/veggiemonk/awesome-docker&quot; target=&quot;_blank&quot;&gt;list of Docker resources&lt;/a&gt; on Github.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course you should also use Docker for your next or current project. Only this way you will truly learn how Docker works.&lt;/p&gt;
</description>
        <pubDate>Sat, 26 Nov 2016 15:19:42 +0100</pubDate>
        <link>http://markusvieghofer.at//docker</link>
        <guid isPermaLink="true">http://markusvieghofer.at//docker</guid>
        
        <category>docker</category>
        
        
      </item>
    
      <item>
        <title>How to fix a broken git after upgrading to macOS Sierra</title>
        <description>&lt;p&gt;Yesterday I’ve upgraded my Mac to the new macOS Sierra. Everything worked great
except that my git installation was broken afterwards. The error message I got
when using git on the command line was the following:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xcrun: error: invalid active developer path &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/Library/Developer/CommandLineTools&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Gladly there is an easy solution to this problem. Just enter &lt;code class=&quot;highlighter-rouge&quot;&gt;xcode-select --install&lt;/code&gt;
into your terminal and (re)install the CommandLineTools.&lt;/p&gt;
</description>
        <pubDate>Thu, 06 Oct 2016 18:29:42 +0200</pubDate>
        <link>http://markusvieghofer.at//git-problems-sierra</link>
        <guid isPermaLink="true">http://markusvieghofer.at//git-problems-sierra</guid>
        
        <category>git</category>
        
        <category>macOS</category>
        
        <category>sierra</category>
        
        
      </item>
    
      <item>
        <title>Integration Testsets with Gradle</title>
        <description>&lt;p&gt;Some time ago I wrote &lt;a href=&quot;http://dev.karriere.at/a/gradle-integrationtests&quot;&gt;a blogpost&lt;/a&gt; on our companies Blog about how we accomplished to create an integration-testset for our gradle projects. Since this post was written in german I wanted to translate and repost it here.&lt;/p&gt;

&lt;p&gt;First you have to declare a new sourceSet for your integration tests in your build.gradle file. Additionally I’ve created the integrationTest task which can be used to execute the integration tests on their own.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;apply&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;plugin:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'java'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;sourceSets&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;integrationTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;srcDir&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'src/integrationTest/java'&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;srcDir&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'src/integrationTest/resources'&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;compileClasspath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sourceSets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compileClasspath&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;runtimeClasspath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sourceSets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;runtimeClasspath&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ....&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;integrationTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;type:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'verification'&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;testClassesDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sourceSets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;integrationTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;classesDir&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;classpath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sourceSets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;integrationTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;runtimeClasspath&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you use IntelliJ IDEA as your IDEA make sure to upgrade to the version 2016.1 or higher. Otherwise it might happen that the gradle source sets don’t work as expected (see &lt;a href=&quot;https://blog.jetbrains.com/idea/2016/03/intellij-idea-2016-1-is-here/&quot;&gt;this blogpost by Jetbrains&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Now your unit and integration tests are completely seperated. You can execute your integration tests using the &lt;code class=&quot;highlighter-rouge&quot;&gt;integrationTest&lt;/code&gt; task and your unit tests with the &lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt; task.&lt;/p&gt;
</description>
        <pubDate>Sat, 10 Sep 2016 10:29:42 +0200</pubDate>
        <link>http://markusvieghofer.at//gradle-integrationtests</link>
        <guid isPermaLink="true">http://markusvieghofer.at//gradle-integrationtests</guid>
        
        <category>java</category>
        
        <category>gradle</category>
        
        <category>intelliJ</category>
        
        
      </item>
    
      <item>
        <title>Android REST Client</title>
        <description>&lt;p&gt;When you develop an Android application that should talk to a server you often have to consume a REST API. There are some ways how you can do that. In the following post I will show you how the way recommended by the Android docs works.&lt;/p&gt;

&lt;p&gt;Until Android 6.0 (which is API level 23) you could use the Apache HTTP Client. However since Android 6.0 this API isn’t supported anymore by default. Instead they suggest to use the &lt;a href=&quot;http://developer.android.com/reference/java/net/HttpURLConnection.html&quot;&gt;HttpURLConnection&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;The reason for this change is that the HttpURLConnection API is more efficient and more transparent to use as stated &lt;a href=&quot;http://developer.android.com/about/versions/marshmallow/android-6.0-changes.html#behavior-apache-http-client&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The HttpURLConnection API has a good documentation. It might be a little hard to figure everything out at first, though.&lt;/p&gt;

&lt;h2 id=&quot;get-request&quot;&gt;GET Request&lt;/h2&gt;
&lt;p&gt;Retrieving a resource via an Http &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt; is the easiest use case. The following code listing (taken and adapted from the official documentation) will show you how.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getResource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resourceUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resourceUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;HttpURLConnection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpURLConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BufferedInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// do something with the stream and set result&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// react to the exception&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;disconnect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;post-request&quot;&gt;POST Request&lt;/h2&gt;
&lt;p&gt;Posting an object to a REST API is very similar to the &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt; request. The only thing you have to do additionally is to set the &lt;a href=&quot;http://developer.android.com/reference/java/net/URLConnection.html#setDoOutput(boolean)&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;setDoOutput(boolean)&lt;/code&gt;&lt;/a&gt; method to true.&lt;/p&gt;

&lt;p&gt;Also you should set the size of the object you want to send. This can either be done with the &lt;a href=&quot;http://developer.android.com/reference/java/net/HttpURLConnection.html#setChunkedStreamingMode(int)&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;setChunkedStreamingMode(int)&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;http://developer.android.com/reference/java/net/HttpURLConnection.html#setFixedLengthStreamingMode(int)&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;setFixedLengthStreamingMode(int)&lt;/code&gt;&lt;/a&gt; method. Which method to use depends whether you know the size of the object to send or not.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;postResource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resourceUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objectToPost&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resourceUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;HttpURLConnection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpURLConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// this makes the urlConnection a POST request&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDoOutput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// you should set the size of the object you want to send.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setChunkedStreamingMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// alternatively you can also use the setFixedLengthStreamingMode(int) method&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BufferedOutputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getOutputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// write the object to the out stream&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BufferedInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// read the result from the server and set result&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// react to the exception&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;disconnect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;put-request&quot;&gt;PUT Request&lt;/h2&gt;
&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;PUT&lt;/code&gt; request is very similar to the &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; request. The only difference is that you have to set the request method to &lt;code class=&quot;highlighter-rouge&quot;&gt;PUT&lt;/code&gt;. All the other options are the same.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;putResource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resourceUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objectToPut&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resourceUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;HttpURLConnection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpURLConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDoOutput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// set the request method to PUT&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setRequestMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PUT&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// set the stream size&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;OutputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BufferedOutputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getOutputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// write to objectToPut to the output stream&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BufferedInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInputStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// read the result from the server and set result&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// react to the exception&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;disconnect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;delete-request&quot;&gt;DELETE Request&lt;/h2&gt;
&lt;p&gt;As for the &lt;code class=&quot;highlighter-rouge&quot;&gt;PUT&lt;/code&gt; request you also have to set the request method for the &lt;code class=&quot;highlighter-rouge&quot;&gt;DELETE&lt;/code&gt; request explicitly. To execute the request you have to call the &lt;code class=&quot;highlighter-rouge&quot;&gt;getResponseCode()&lt;/code&gt; method.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;deleteResource&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resourceUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resourceUrl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;HttpURLConnection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpURLConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;openConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// set the request method to DELETE&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setRequestMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;DELETE&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// get the result&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getResponseCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// react to the exception&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;urlConnection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;disconnect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Fri, 22 Apr 2016 12:05:58 +0200</pubDate>
        <link>http://markusvieghofer.at//android-rest-client</link>
        <guid isPermaLink="true">http://markusvieghofer.at//android-rest-client</guid>
        
        <category>android</category>
        
        <category>rest</category>
        
        <category>http</category>
        
        
      </item>
    
      <item>
        <title>Bots are the new thing!</title>
        <description>&lt;p&gt;Remember some time ago, when everybody talked about apps? Now nobody does that anymore. Bots are the new thing.&lt;/p&gt;

&lt;p&gt;In the ancient times of 2015 the operating system of your smartphone was the platform you could install apps on. This way you could customize your phone in a way it fitted best for you. There were a lot of apps out there and you probably installed a lot of them on your phone (at least I did this).&lt;/p&gt;

&lt;p&gt;However, now, in 2016, there is a new thing around, called bots. It seems that now every messenger introduces their own platform for bots. &lt;a href=&quot;https://slack.com/&quot;&gt;Slack&lt;/a&gt; provides the ability to create bots for some time now, &lt;a href=&quot;https://telegram.org/blog/bots-2-0&quot;&gt;Telegram&lt;/a&gt; just introduced the second version of their bot platform and Facebook just &lt;a href=&quot;http://www.theverge.com/2016/4/12/11395806/facebook-messenger-bot-platform-announced-f8-conference/in/11179381&quot;&gt;announced&lt;/a&gt; on its yearly developer conference F8 that it would provide a &lt;a href=&quot;https://developers.facebook.com/blog/post/2016/04/12/bots-for-messenger/&quot;&gt;platform for bots&lt;/a&gt; for its messenger, too. Especially since Facebook introduced their bot platform we can more or less say, that the era of bots officially started.&lt;/p&gt;

&lt;p&gt;But what are bots exactly?&lt;/p&gt;

&lt;p&gt;Some messengers, &lt;a href=&quot;https://slack.com/&quot;&gt;Slack&lt;/a&gt; for example, has bots some time now. These little programs can help you a lot during your work day. They can tell you if there were activity on your ticket, or if the jenkins build you just started passed. They can also remind you everyday to do your daily standup.&lt;/p&gt;

&lt;p&gt;As for apps, the possibility are endless. Such a bot can do nearly everything for you, as the ad by the Kik messenger implies.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/5yr1r1YlGVo&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;The reason I like (especially slack) bots is that they can really help you get your work done faster. Most of the time you have your messenger open all day but don’t want to check your Jenkins, ticketing system (e.g. JIRA), etc. every few minutes. With bots you can reduce the number of times you have to check something since the bots can tell you when you have to take action on something.&lt;/p&gt;

&lt;p&gt;Also the slack remind bot helps me a lot. Often times I just want to get reminded about something simple, such as “check if process X still runs”. I could do this by using tools like Evernote or Wunderlist but the main drawback here is that I only get reminded on my laptop, if I’ve opened the app before.&lt;/p&gt;

&lt;p&gt;Since Slack is one of the few apps that automatically started whenever I start my computer I can be absolutely sure, that I always will be notified, when I’m in front of my computer. This is especially important if I get reminded about something the first thing in the morning.&lt;/p&gt;

&lt;p&gt;The drawbacks about these bots is that, each bot may interrupt you during your work (depending on your notification settings). If too many bots are installed, the added noise could cancel out the benefits such bots may provide.&lt;/p&gt;
</description>
        <pubDate>Sun, 17 Apr 2016 12:07:55 +0200</pubDate>
        <link>http://markusvieghofer.at//bots</link>
        <guid isPermaLink="true">http://markusvieghofer.at//bots</guid>
        
        <category>facebook</category>
        
        <category>slack</category>
        
        <category>telegram</category>
        
        <category>messenger</category>
        
        <category>bots</category>
        
        
      </item>
    
      <item>
        <title>Fluent assertions with AssertJ</title>
        <description>&lt;p&gt;Writing tests is essential, but writing good tests is hard. It is specially hard to write good and readable assertions.&lt;/p&gt;

&lt;p&gt;When you use JUnit you have methods such as &lt;span class=&quot;code&quot;&gt;assertEquals&lt;/span&gt; or &lt;span class=&quot;code&quot;&gt;assertTrue&lt;/span&gt;. Both these methods work fine and do what they should do. However if the assertions get more complex they might not be as handy as assertions could be.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://joel-costigliola.github.io/assertj/&quot;&gt;AssertJ&lt;/a&gt; is a library that gives you the possibility to write fluent assertions in your tests.&lt;/p&gt;

&lt;p&gt;The following example implementation of unit tests show the difference between AssertJ and standard JUnit tests.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testZooJunit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Animal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expectedAnimals&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expectedAnimals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expectedAnimals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;monkey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expectedAnimals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertEquals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expectedAnimals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zoo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;animals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testZoo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zoo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;animals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;containsOnly&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;monkey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As you can see the AssertJ test tells you in much less code exactly was it does. This make such tests a lot more readable.&lt;/p&gt;

&lt;p&gt;Besides the standard assertions AssertJ also provides a way to generate customized assertion classes. This can either be done via the command line or your build tool, such as Maven. Such a generated assertion class can look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/** ... */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AnimalAssert&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AbstractAssert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AnimalAssert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Animal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Constructor&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/** ... */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AnimalAssert&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AnimalAssert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/** ... */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AnimalAssert&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hasName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// check that actual Animal we want to make assertions on is not null.     isNotNull();&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// overrides the default error message with a more explicit one String    &lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertjErrorMessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;\nExpecting name of:\n &amp;lt;%s&amp;gt;\nto be:\n &amp;lt;%s&amp;gt;\nbut was:\n &amp;lt;%s&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// null safe check&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actualName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;areEqual&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;actualName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;failWithMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;assertjErrorMessage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actualName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// return the current assertion for method chaining return this;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;With these generated classes you can do assertions that are customized for your objects. Of course, you can implement your own assertion methods in these classes, too. An example of a test that uses the &lt;span class=&quot;code&quot;&gt;AnimalAssert&lt;/span&gt; class can look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;devcouch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AnimalAssert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AnimalTest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// setup&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;testName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ANIMAL_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you want to know more please read the &lt;a href=&quot;http://joel-costigliola.github.io/assertj/assertj-core.html&quot;&gt;docs&lt;/a&gt; or head over to &lt;a href=&quot;https://github.com/DevCouch/Assertj-Showcase&quot;&gt;GitHub&lt;/a&gt; and check out my AssertJ showcase.&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Apr 2016 18:41:00 +0200</pubDate>
        <link>http://markusvieghofer.at//assertj</link>
        <guid isPermaLink="true">http://markusvieghofer.at//assertj</guid>
        
        <category>assertj</category>
        
        <category>java</category>
        
        <category>junit</category>
        
        <category>unit-test</category>
        
        
      </item>
    
      <item>
        <title>Crate - A Scalable SQL Database</title>
        <description>&lt;p&gt;When you have to choose a database for your project, the first thing you have to decide whether you pick a SQL database or a NoSql Database.&lt;/p&gt;

&lt;p&gt;A SQL database lets you store your data in a very structured way, supports relationships and lets you query the data with a mature and very powerful query language.&lt;/p&gt;

&lt;p&gt;A NoSql database on the other hand lets you store your data a lot more unstructured way. However, a NoSql database is easier to scale.&lt;/p&gt;

&lt;p&gt;Most of the time you just want a SQL database that scales really well. Fortunately there is the scalable SQL database called &lt;a href=&quot;https://crate.io/&quot; title=&quot;Crate&quot;&gt;Crate&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;what-is-crate&quot;&gt;What is Crate?&lt;/h2&gt;
&lt;p&gt;Put simply, Crate is a database that is based on &lt;a href=&quot;https://www.elastic.co/&quot; title=&quot;ElasticSearch&quot;&gt;ElasticSearch&lt;/a&gt; and lets you execute SQL queries on it.&lt;/p&gt;

&lt;p&gt;Crate is very considered to make it clear that they are &lt;a href=&quot;http://www.slideshare.net/matthiaswahl/turning-a-search-engine-into-a-relational-database/15?src=clipshare&quot; title=&quot;Crate is not just a SQL wrapper&quot;&gt;not just a SQL wrapper&lt;/a&gt; around ElasticSearch. They provide a query engine that talks directly to the ElasticSearch indices. The don’t just convert the SQL query to a ElasticSearch query and send it via HTTP to the index.&lt;/p&gt;

&lt;h2 id=&quot;fast-scalable-and-easy-to-use&quot;&gt;Fast, Scalable and Easy to Use&lt;/h2&gt;
&lt;p&gt;These are the adjectives crate gave themselves. Since Crate is built on top of ElasticSearch the &lt;a href=&quot;https://www.elastic.co/use-cases/github&quot;&gt;scalability&lt;/a&gt; &lt;a href=&quot;https://www.elastic.co/use-cases/xing&quot;&gt;should&lt;/a&gt; &lt;a href=&quot;https://www.elastic.co/use-cases/soundcloud&quot;&gt;be&lt;/a&gt; &lt;a href=&quot;https://www.elastic.co/use-cases/guardian&quot;&gt;given&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To test how fast Crate is I’ve imported 35 million log messages into Crate. Since Crate is based on ElasticSearch, you can use some ElasticSearch specific features in your SQL queries. In my example I’ve added a full text index to the value column of the table. This improved the runtime of my queries even more.&lt;/p&gt;

&lt;p&gt;To make use of that index (called value_ft, for value full text) I’ve used the ElasticSearch specific MATCH function built in to the Crate SQL dialect (&lt;a href=&quot;https://crate.io/docs/reference/sql/fulltext.html&quot;&gt;Here&lt;/a&gt; you can find more infos about full text search).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actions&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MATCH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value_ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'jobs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;USING&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phrase&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This query took 0.018 seconds, which is pretty fast.
&lt;img src=&quot;/assets/images/crate/fast.png&quot; alt=&quot;Query runtimy&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you want to find out if Crate is really easy to use you can either believe me that it is, or you try it out yourself (what you should do!). If you want to install it on your local machine you can take a look at their &lt;a href=&quot;https://crate.io/docs/getting-started/local/&quot;&gt;documentation&lt;/a&gt;. You can also go to my &lt;a href=&quot;https://github.com/DevCouch/crate-logs&quot;&gt;Github&lt;/a&gt; &lt;a href=&quot;https://github.com/DevCouch/crate-ui&quot;&gt;repos&lt;/a&gt; to find a my sample implementation.&lt;/p&gt;
</description>
        <pubDate>Sat, 06 Feb 2016 20:05:56 +0100</pubDate>
        <link>http://markusvieghofer.at//crate</link>
        <guid isPermaLink="true">http://markusvieghofer.at//crate</guid>
        
        <category>database</category>
        
        <category>crate</category>
        
        <category>elasticsearch</category>
        
        
      </item>
    
      <item>
        <title>Top Programming Languages 2015</title>
        <description>&lt;p&gt;The year 2015 is over. This means that everybody is reflecting the old year and makes plans for the new year.&lt;/p&gt;

&lt;p&gt;This means also we can figure out which programming language was the most used on in 2015. For example the &lt;a href=&quot;http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html&quot;&gt;Tiobe Index&lt;/a&gt; tells you exactly this.&lt;/p&gt;

&lt;p&gt;According to this index, Java has won the race. Together with C on the second place they form the clear front runners. With some distance also C++, C# and Python follow.&lt;/p&gt;

&lt;p&gt;What’s interesting about this fact is, that even though Java was long seen as cumbersome and complicated it still is very relevant. The fact that Java is also the official programming language for Android strengthens its user base. Also Java 8 was a huge improvement.&lt;/p&gt;

&lt;p&gt;It’s also interesting, that C is the second most used language in this index. A reason for this I can think of is the Internet of Things (IoT). Now that everything is connected to the internet (even your coffee machine, refrigerator or music server at home) C is still relevant.&lt;/p&gt;

&lt;p&gt;Even though iOS and Apples products are heavily present in the media Objective-C and Swift (even combined together) are far away from the 5th place. Apparently Apple isn’t as compelling to developers as to end consumers.&lt;/p&gt;

&lt;p&gt;Of course it is hard to define the only correct ranking of programming languages since you need to figure out good sources for your data. The &lt;a href=&quot;http://spectrum.ieee.org/computing/software/the-2015-top-ten-programming-languages&quot;&gt;IEEE Spectrum&lt;/a&gt;, for example, delivers a similar result. Only the Python and C# place are switched.&lt;/p&gt;

&lt;p&gt;Last but not least I also find the ranking of &lt;a href=&quot;http://www.inc.com/larry-kim/10-most-popular-programming-languages-today.html&quot;&gt;Inc.&lt;/a&gt; very interesting. Mainly because the ranking differs a lot from the other ones. Although Java is also in this ranking in the first place, Python is ranked on the second place before C, Ruby and Javascript.&lt;/p&gt;

&lt;p&gt;So if you wish to learn a new programming this year you maybe want to pick one of the languages listed above (if you don’t already know all of them ;).&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Jan 2016 17:33:00 +0100</pubDate>
        <link>http://markusvieghofer.at//programming-languages-2015</link>
        <guid isPermaLink="true">http://markusvieghofer.at//programming-languages-2015</guid>
        
        <category>java</category>
        
        <category>programming-language</category>
        
        <category>python</category>
        
        <category>c</category>
        
        <category>c++</category>
        
        <category>c#</category>
        
        <category>ruby</category>
        
        <category>javascript</category>
        
        
      </item>
    
      <item>
        <title>New Year New Blog</title>
        <description>&lt;p&gt;Trying something new is important. Last year I learned two new programming languages: &lt;a href=&quot;/new-year-new-language-python&quot; title=&quot;Python&quot;&gt;Python&lt;/a&gt; and &lt;a href=&quot;/a-new-programming-language-again&quot; title=&quot;PHP&quot;&gt;PHP&lt;/a&gt;. This year the first thing I’m going the check out wont be a new programming language but a new blogging platform.&lt;/p&gt;

&lt;p&gt;Since this year my blog runs on the &lt;a href=&quot;https://ghost.org/&quot; title=&quot;Ghost&quot;&gt;ghost&lt;/a&gt; platform. I’ve already tried ghost &lt;a href=&quot;/ghost-just-a-blogging-platform/&quot; title=&quot;Ghost - Just a blogging platform&quot;&gt;a while ago&lt;/a&gt; and I was impressed. However at this time my blog ran on Wordpress and I didn’t want to switch, partly because at this time ghost was still in a very early phase.&lt;/p&gt;

&lt;p&gt;In the beginning of 2016 my Wordpress hosting contract ran out and I decided to try something new, just for the sake of it. Since I always like the simplicity of Ghost it was obvious to give it a try.&lt;/p&gt;

&lt;p&gt;Some of the reasons why I switched were that Wordpress becomes more and more difficult to manage, I experienced it as slow and a bit too much for my needs.&lt;/p&gt;

&lt;p&gt;Because Wordpress is way more that just a blogging platform it felt a bit too complex for your “just” a blog. Also the admin site was really slow compared to ghost. I didn’t look for any benchmarks but the fact that Wordpress is a PHP app and Ghost is a single page Javascript app should be reason enough to make Ghost faster than Wordpress.&lt;/p&gt;

&lt;p&gt;I also really like the split editor of Ghost. You can write your post using Markdown for formatting and you immediately see how it will look like. This makes writing really easy and your mouse becomes almost completely unnecessary while your write. As a developer, who always tries to make the mouse as unnecessary as possible (since it takes a lot of time to use it), this is a huge plus point.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/ghost-2/ghost.png&quot; alt=&quot;&quot; title=&quot;Ghost Editor&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Of course, Wordpress isn’t that bad and Ghost the ultimate tool for solving all blogging problems. There are some things that ghost doesn’t ship with. For example you have to setup an email service you want to use in your app; I used &lt;a href=&quot;https://www.mailgun.com/sending-email&quot; title=&quot;Mailgun&quot;&gt;mailgun&lt;/a&gt; for that. You also have to setup a commenting system for your blog. As you can see below I use &lt;a href=&quot;https://disqus.com/&quot; title=&quot;Disqus&quot;&gt;disqus&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are a developer both these things are a no brainer and there are good tutorials for both &lt;a href=&quot;http://support.ghost.org/mail/&quot; title=&quot;Use Mailgun for you Ghost blog&quot;&gt;these&lt;/a&gt; &lt;a href=&quot;http://support.ghost.org/add-disqus-to-my-ghost-blog/&quot; title=&quot;Use disqus for your Ghost blog&quot;&gt;tasks&lt;/a&gt;. However if you are a blogger without a technical background these tasks can be hard and will probably hinder you to use Ghost.&lt;/p&gt;

&lt;p&gt;Another thing that I’m still missing is a dashboard for my blog. I have to gather all the data from different places, such as my commenting system, Google Analytics, etc. Although you maybe don’t need a dashboard for a blog it is still good to have all necessary information on one page.&lt;/p&gt;

&lt;p&gt;As said before Wordpress is definitely not dead and I also don’t think Ghost will replace Wordpress. The redesigned &lt;a href=&quot;http://wordpress.com&quot; title=&quot;Wordpress&quot;&gt;wordpress.com&lt;/a&gt; site is definitely a step in the right direction. It became a lot faster since it is now a single page Javascript app, too. Additionally you can also manage multiple sites at once (which was possible before the redesign, too) which can be very helpful if you have to manage multiple Wordpress instances.&lt;/p&gt;

&lt;p&gt;However there are still some things that aren’t perfect such as the automatic reformat of your text if you switch from the HTML view to the text view; this can be really frustrating, especially if you have code listings on your site.&lt;/p&gt;

&lt;p&gt;For now I will enjoy the simplicity of Ghost.&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Jan 2016 17:05:01 +0100</pubDate>
        <link>http://markusvieghofer.at//ghost-post</link>
        <guid isPermaLink="true">http://markusvieghofer.at//ghost-post</guid>
        
        
      </item>
    
      <item>
        <title>Why you should use an repository manager</title>
        <description>&lt;p&gt;When you develop larger applications the time will come when you experience a dependency hell if you don’t handle your dependencies properly.&lt;/p&gt;

&lt;p&gt;A scenario I experienced multiple times is that I checked out a new project from the source code repository and wanted to compile it. However when I started the compilation process my build tool told me that I miss some dependency to another of my projects. After I checked out this project and installed it into my local Maven repository I could compile the first project.&lt;/p&gt;

&lt;p&gt;Some times this process went on for a while until I had installed all projects into my local Maven repository.&lt;/p&gt;

&lt;p&gt;The solution that would help to avoid this problem is to install some kind of global repository which hosts all versions of your internally developed projects. During the development process everyone who needs a specific version of any project can download it from there and use it.&lt;/p&gt;

&lt;h2 id=&quot;how-can-a-repository-manager-help-you-to-accomplish-this&quot;&gt;How can a repository manager help you to accomplish this?&lt;/h2&gt;

&lt;p&gt;A repository manager is a tool that hosts all versions of your internally developed projects and provides a central place to download it from. It also may act as a proxy to publically available repositories (such as the the central Maven repository).&lt;/p&gt;

&lt;p&gt;It holds all the versions of your internal projects you deploy to it. Later you can download the needed dependencies from there. If you configure your build tools correctly all this is done automatically.&lt;/p&gt;

&lt;h2 id=&quot;nexus-vs-artifactory&quot;&gt;Nexus vs. Artifactory&lt;/h2&gt;

&lt;p&gt;There are two big players that provide repo managers: &lt;a href=&quot;http://www.sonatype.org/nexus/&quot;&gt;Nexus&lt;/a&gt; and &lt;a href=&quot;https://www.jfrog.com/artifactory/&quot;&gt;Artifactory&lt;/a&gt;. Both tools are open source and can be used for free. This free version only provides the basic features, though. Since both tools come from the Java world, you can use the free version perfectly as a repository manager for your Java projects.&lt;/p&gt;

&lt;p&gt;Besides the Java artifact management a of of other types of repositories can be managed, such as Docker, RPM or Bower.&lt;/p&gt;

&lt;p&gt;Since both tools provide a wide array of features it can be pretty hard to decide what tool to use. There is a &lt;a href=&quot;https://binary-repositories-comparison.github.io/&quot;&gt;comparison martix&lt;/a&gt; online that can be used for comparison. However if you just need a repository manager for managing your java artifacts both tools can be used.&lt;/p&gt;

&lt;p&gt;In such a case I would take artifactory. The reason is that it has a nicer UI and also its documentation is more straight forward. Additionally artifactory helps you to set up your build tools such as Maven or Gradle.&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Dec 2015 19:21:06 +0100</pubDate>
        <link>http://markusvieghofer.at//repository-manager</link>
        <guid isPermaLink="true">http://markusvieghofer.at//repository-manager</guid>
        
        <category>artifactory</category>
        
        <category>gradle</category>
        
        <category>maven</category>
        
        <category>versioning</category>
        
        
      </item>
    
  </channel>
</rss>
